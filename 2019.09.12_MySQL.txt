7.SQL查询语句确当要创建哪种类型的索引，如何优化查询？
·性能优化过程中，选择在哪个列上创建索引是最重要的步骤之一，可以考虑使用索引的主要有两种类型的列：WHERE子句出现的列，JOIN子句出现的列。
·考虑列中值的分布，索引的列的基数越大，索引的效果越好。
·使用短索引，如果对字符串列进行索引，应该指定一个前缀长度，可节省大量索引空间，提升查询速度。
·利用最左前缀，顾名思义，就是最左优先，在多列索引中有体现。即先看第一列，在第一列满足的条件下再看左边第二列，以此类推。
·不要过度建索引，只保持所需的索引。每个额外的索引都要占用额外的磁盘空间，并降低写操作的性能。
·修改表的内容时，索引必须进行更新，有时可能需要重构。因此，索引越多，所花时间越长。
·MySQL只对以下操作符使用索引：<、<=、=>、>=、between、in、以及某些时候的LIKE(不以通配符%或_开头)。

8.聚集索引和非聚集索引区别？
【根本区别】
表记录的排列顺序和与索引的排列顺序是否一致。
【聚集索引】
表记录的排列顺序和索引的排列顺序一致，所以查询效率快，只要找到第一个索引值记录，其余连续性的记录在物理也一样连续存放。
聚集索引对应的缺点是修改慢，为了保证表中记录的物理和索引顺序一致，在记录插入的时候，会对数据页重新排序。
(类似于字典中的拼音查询)
【非聚集索引】
制定了表中记录的逻辑结构，但是记录的物理和索引不一定一致，两种索引都采用B+树结构，非聚集索引的叶子层并不和实际数据页相重叠，
而采用叶子层包含一个指向表中的记录在数据页中的指针方式。非聚集索引层次多，不会造成数据重排。
(类似于字典中的部首查询)