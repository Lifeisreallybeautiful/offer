1.事务四大特性(ACID)原子性、一致性、隔离性、持久性
原子性(Atomicity)：
原子性是指事务包含的所有操作要么全部成功，要么全部失败回滚。因此事务的操作如果成功就必须完全应用到数据库，如果操作失败则不能对数据库有任何影响。
一致性(COnsistency)：
事务开始前和结束后，数据库的完整性约束没有被破坏。比如A向B转账，不可能A扣了钱，B却没收到。
隔离性(Isolation)：
当多个用户并发访问数据库时，比如说操作同一张表时，数据库为每一个用户开启的事务，不能被其他事务的操作所干扰，多个并发事务之间要相互隔离。
(涉及到数据库的隔离级别)
持久性(Durability)：
指一个事务一旦被提交了，那么对数据库中的数据的改变就是永久性的，即使在数据库系统遇到故障的情况下也不会丢失提交事务的操作。

2.事务的并发？事务隔离级别，每个级别会引发什么问题，MySQL默认是哪个级别？
理论上来说，事务应该彼此完全隔离，以避免并发事务所导致的问题。然而，那样会对性能产生极大的影响，因为事务必须按顺序运行。
实际开发中，为了提升性能，事务会以较低的隔离级别运行，事务的隔离级别可以通过隔离事务属性指定。
【事务的并发问题】
Ⅰ脏读：事务A读取了事务B更新的数据，然后事务B回滚操作，那么A读取到的数据是脏数据。
Ⅱ不可重复读：事务A多次读取同一数据，事务B在事务A多次读取的过程中，对数据进行了更新并提交，导致事务A多次读取同一数据时，先后两次读到的数据结果会不一样。
Ⅲ幻读：事务T1对一个表中所有的行的某个数据项做了从1修改为2的操作，此时事务T2又对这个表中插入了一行数据项，而这个数据项的数值还是为1，并且提交给了数据库。
	此时事务T1的用户如果再查看刚刚修改的数据，会发现还是跟没有修改一样，其实这行是从事务T2中添加的，就好像幻觉一样。
小结：不可重复读和幻读很容易弄混，不可重复读侧重于修改，幻读侧重于新增或删除，不可重复读的问题只需要锁住满足条件的行，解决幻读需要锁表。
【事务的隔离级别】
-----------------------------------------------------------------------------
-	事务隔离级别		-　　脏读	-　　不可重复读　　-      幻读	 -
-----------------------------------------------------------------------------
-读未提交 read-uncommitted    -    存在  -	   存在       -	   存在      -
-----------------------------------------------------------------------------
-不可重复读 read-committed 	 -   不存在  -      存在	  -	存在	 -
-----------------------------------------------------------------------------
-可重复读 repeatable-read     -   不存在  -      不存在	  -	存在	 -
-----------------------------------------------------------------------------
-串行化 serializable	   -   不存在  -	   不存在	   -	不存在	 -
-----------------------------------------------------------------------------
